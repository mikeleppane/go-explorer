name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]

jobs:
  go-explorer-app-deployment-pipeline:
    runs-on: ubuntu-20.04
    env:
      COMMIT_MESSAGES: ${{ join(github.event.commits.*.message) }}
      PORT: 5000
      GOLANG_VERSIONS: 1.17
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: pull GO image
        run: docker pull golang:1.17
      - name: npm install
        run: |
          npm install --prefix server/
          npm install --prefix client/
      - name: code quality - formatting check
          run: |
            npm run --prefix server/ check-format
            npm run --prefix client/ check-format
      - name: code quality - linting
          run: |
            npm run --prefix server/ lint
            npm run --prefix client/ lint     

#      - name: build
#        run: |
#          export API_BASE_URL=${{env.API_BASE_URL}}
#          npm run build
#      - name: unittest
#        run: |
#          export PORT=${{env.PORT}}
#          export SECRET=${{env.API_SECRET}}
#          export API_BASE_URL=${{env.API_BASE_URL}}
#          export TEST_MONGODB_URI=${{env.TEST_MONGODB_URI}}
#          npm run start-test &
#          npm run test
#      - name: component tests
#        run: npm run test:client
#      - name: e2e tests
#        uses: cypress-io/github-action@v2
#        with:
#          command: npm run test:e2e
#          wait-on: http://localhost:3003