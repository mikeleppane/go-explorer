name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]

jobs:
  go-explorer-app-deployment-pipeline:
    runs-on: ubuntu-20.04
    env:
      COMMIT_MESSAGES: ${{ join(github.event.commits.*.message) }}
      PORT: 5000
      GOLANG_VERSIONS: 1.17;1.16
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: pull GO image
        run: docker pull golang:1.17
      - name: npm install
        run: |
          npm install --prefix /
          npm install --prefix frontend/
      - name: code quality - formatting check
        run: |
          npm run --prefix backend/ check-format
          npm run --prefix frontend/ check-format
      - name: code quality - linting
        run: |
          npm run --prefix backend/ lint
          npm run --prefix frontend/ lint
      - name: build
        run: |
          npm run --prefix backend/ build
          npm run --prefix frontend/ build
      - name: backend - unit/integration tests
        run: |
          npm run --prefix backend/ test
      - name: start backend and frontend
        run: |
          npm run --prefix backend/ start-test &
          npm run --prefix frontend/ start-prod &
      - name: e2e tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          command: npm run --prefix frontend/ test:e2e
          wait-on: http://localhost:3000
          project: ./frontend
          config: video=false